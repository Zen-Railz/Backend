// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package system

import (
	"database/sql"
	"github.com/google/wire"
	"zenrailz/log"
	"zenrailz/nexus"
	"zenrailz/repository"
	"zenrailz/repository/database"
	"zenrailz/repository/railway"
	"zenrailz/service"
	"zenrailz/service/native"
	railway2 "zenrailz/service/railway"
)

// Injectors from wire.go:

func InitialiseNexus(logger log.Logger, db *sql.DB) *nexus.Store {
	repository := database.NewRepository(db)
	service := native.NewService(logger, repository)
	railwayRepository := railway.NewRepository(db)
	railwayService := railway2.NewService(logger, railwayRepository)
	store := nexus.NewStore(service, railwayService)
	return store
}

// wire.go:

var databaseRepositorySet = wire.NewSet(database.NewRepository, wire.Bind(new(repository.Database), new(*database.Repository)))

var railwayRepositorySet = wire.NewSet(railway.NewRepository, wire.Bind(new(repository.Railway), new(*railway.Repository)))

var nativeServiceSet = wire.NewSet(native.NewService, wire.Bind(new(service.Native), new(*native.Service)))

var railwayServiceSet = wire.NewSet(railway2.NewService, wire.Bind(new(service.Railway), new(*railway2.Service)))
